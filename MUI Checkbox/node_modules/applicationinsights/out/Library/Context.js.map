{"version":3,"file":"Context.js","sourceRoot":"","sources":["../../Library/Context.ts"],"names":[],"mappings":"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","sourcesContent":["import os = require(\"os\");\r\nimport fs = require(\"fs\");\r\nimport path = require(\"path\");\r\n\r\nimport Contracts = require(\"../Declarations/Contracts\");\r\nimport { APPLICATION_INSIGHTS_SDK_VERSION } from \"../Declarations/Constants\";\r\nimport Logging = require(\"./Logging\");\r\nimport * as PrefixHelpers from \"./PrefixHelper\";\r\nimport * as Constants from \"../Declarations/Constants\";\r\n\r\nclass Context {\r\n\r\n    public keys: Contracts.ContextTagKeys;\r\n    public tags: { [key: string]: string };\r\n    public static DefaultRoleName: string = \"Web\";\r\n    public static appVersion: { [path: string]: string } = {};\r\n    public static sdkVersion: string = APPLICATION_INSIGHTS_SDK_VERSION;\r\n    public static sdkPrefix: string = null;\r\n\r\n    constructor(packageJsonPath?: string) {\r\n        this.keys = new Contracts.ContextTagKeys();\r\n        this.tags = <{ [key: string]: string }>{};\r\n\r\n        this._loadApplicationContext(packageJsonPath);\r\n        this._loadDeviceContext();\r\n        this._loadInternalContext();\r\n    }\r\n\r\n    private _loadApplicationContext(packageJsonPath?: string) {\r\n        try {\r\n            packageJsonPath = packageJsonPath || path.resolve(__dirname, \"../../../../package.json\");\r\n            if (!Context.appVersion[packageJsonPath]) {\r\n                Context.appVersion[packageJsonPath] = \"unknown\";\r\n                let packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n                if (packageJson && typeof packageJson.version === \"string\") {\r\n                    Context.appVersion[packageJsonPath] = packageJson.version;\r\n                }\r\n            }\r\n            this.tags[this.keys.applicationVersion] = Context.appVersion[packageJsonPath];\r\n        }\r\n        catch (exception) {\r\n            Logging.info(\"Failed to read app version: \", exception);\r\n        }\r\n    }\r\n\r\n    private _loadDeviceContext() {\r\n\r\n        let cloudRoleInstance = os && os.hostname();\r\n        let cloudRole = Context.DefaultRoleName;\r\n\r\n        // Try to get more accurate roleName and instance when running in Azure\r\n        if (process.env.WEBSITE_SITE_NAME) { // Azure Web apps and Functions\r\n            cloudRole = process.env.WEBSITE_SITE_NAME;\r\n        }\r\n        if (process.env.WEBSITE_INSTANCE_ID) {\r\n            cloudRoleInstance = process.env.WEBSITE_INSTANCE_ID;\r\n        }\r\n\r\n        this.tags[this.keys.deviceId] = \"\";\r\n        this.tags[this.keys.cloudRoleInstance] = cloudRoleInstance;\r\n        this.tags[this.keys.deviceOSVersion] = os && (os.type() + \" \" + os.release());\r\n        this.tags[this.keys.cloudRole] = cloudRole;\r\n\r\n        // not yet supported tags\r\n        this.tags[\"ai.device.osArchitecture\"] = os && os.arch();\r\n        this.tags[\"ai.device.osPlatform\"] = os && os.platform();\r\n    }\r\n\r\n    private _loadInternalContext() {\r\n        // If Context is already set in the bootstrap, don't set it here\r\n        if (!Context.sdkPrefix) {\r\n            this.tags[this.keys.internalSdkVersion] = `${PrefixHelpers.getResourceProvider()}${PrefixHelpers.getOsPrefix()}${Constants.AttachTypePrefix.MANUAL}_node:${Context.sdkVersion}`\r\n        }\r\n    }\r\n}\r\n\r\nexport = Context;\r\n"]}