{"version":3,"file":"AzureFunctionsHook.js","sourceRoot":"","sources":["../../AutoCollection/AzureFunctionsHook.ts"],"names":[],"mappings":"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","sourcesContent":["import { Disposable, PostInvocationContext, PreInvocationContext } from \"@azure/functions-core\";\r\nimport Logging = require(\"../Library/Logging\");\r\nimport TelemetryClient = require(\"../Library/TelemetryClient\");\r\nimport { CorrelationContext, CorrelationContextManager } from \"./CorrelationContextManager\";\r\nimport * as sharedFuncTypes from \"../Library/Functions\";\r\nimport * as v3 from \"@azure/functions\";\r\n\r\n/** Node.js Azure Functions handle incoming HTTP requests before Application Insights SDK is available,\r\n * this code generate incoming request telemetry and generate correlation context to be used\r\n * by outgoing requests and other telemetry, we rely on hooks provided by Azure Functions\r\n*/\r\nexport class AzureFunctionsHook {\r\n    private _client: TelemetryClient;\r\n    private _functionsCoreModule: typeof import(\"@azure/functions-core\");\r\n    private _autoGenerateIncomingRequests: boolean;\r\n    private _preInvocationHook: Disposable;\r\n    private _postInvocationHook: Disposable;\r\n    private _cachedModelHelper: FuncModelV3Helper | FuncModelV4Helper | null | undefined;\r\n\r\n    constructor(client: TelemetryClient) {\r\n        this._client = client;\r\n        this._autoGenerateIncomingRequests = false;\r\n        try {\r\n            this._functionsCoreModule = require(\"@azure/functions-core\");\r\n            this._addPreInvocationHook();\r\n            this._addPostInvocationHook();\r\n        }\r\n        catch (error) {\r\n            Logging.info(\"AzureFunctionsHook failed to load, not running in Azure Functions\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * NOTE: The programming model can be changed any time until the first invocation\r\n     * For that reason, we delay setting the model helper until the first hook is called, but we can cache it after that\r\n     */\r\n    private _getFuncModelHelper(): FuncModelV3Helper | FuncModelV4Helper | null {\r\n        if (this._cachedModelHelper === undefined) {\r\n            const funcProgModel = this._functionsCoreModule.getProgrammingModel();\r\n            if (funcProgModel.name === \"@azure/functions\") {\r\n                if (funcProgModel.version.startsWith(\"3.\")) {\r\n                    this._cachedModelHelper = new FuncModelV3Helper();\r\n                } else if (funcProgModel.version.startsWith(\"4.\")) {\r\n                    this._cachedModelHelper = new FuncModelV4Helper();\r\n                }\r\n            }\r\n\r\n            if (!this._cachedModelHelper) {\r\n                this._cachedModelHelper = null;\r\n                Logging.warn(`AzureFunctionsHook does not support model \"${funcProgModel.name}\" version \"${funcProgModel.version}\"`);\r\n            }\r\n        }\r\n\r\n        return this._cachedModelHelper;\r\n    }\r\n\r\n    public enable(isEnabled: boolean) {\r\n        this._autoGenerateIncomingRequests = isEnabled;\r\n    }\r\n\r\n    public dispose() {\r\n        this.enable(false);\r\n        this._removeInvocationHooks();\r\n        this._functionsCoreModule = undefined;\r\n    }\r\n\r\n    private _addPreInvocationHook() {\r\n        if (!this._preInvocationHook) {\r\n            this._preInvocationHook = this._functionsCoreModule.registerHook(\"preInvocation\", async (preInvocationContext: PreInvocationContext) => {\r\n                try {\r\n                    const modelHelper = this._getFuncModelHelper();\r\n                    if (modelHelper) {\r\n                        const sharedContext = <sharedFuncTypes.Context>preInvocationContext.invocationContext;\r\n                        // Start an AI Correlation Context using the provided Function context\r\n                        let extractedContext = CorrelationContextManager.startOperation(sharedContext);\r\n                        if (extractedContext) { // Will be null if CorrelationContextManager is not enabled, we should not try to propagate context in that case\r\n                            extractedContext.customProperties.setProperty(\"InvocationId\", sharedContext.invocationId);\r\n\r\n                            const traceContext = sharedContext.traceContext;\r\n                            if (traceContext.attributes) {\r\n                                extractedContext.customProperties.setProperty(\"ProcessId\", traceContext.attributes[\"ProcessId\"]);\r\n                                extractedContext.customProperties.setProperty(\"LogLevel\", traceContext.attributes[\"LogLevel\"]);\r\n                                extractedContext.customProperties.setProperty(\"Category\", traceContext.attributes[\"Category\"]);\r\n                                extractedContext.customProperties.setProperty(\"HostInstanceId\", traceContext.attributes[\"HostInstanceId\"]);\r\n                                extractedContext.customProperties.setProperty(\"AzFuncLiveLogsSessionId\", traceContext.attributes[\"#AzFuncLiveLogsSessionId\"]);\r\n                            }\r\n                            preInvocationContext.functionCallback = CorrelationContextManager.wrapCallback(preInvocationContext.functionCallback, extractedContext);\r\n                            if (modelHelper.isHttpTrigger(preInvocationContext) && this._autoGenerateIncomingRequests) {\r\n                                preInvocationContext.hookData.appInsightsExtractedContext = extractedContext;\r\n                                preInvocationContext.hookData.appInsightsStartTime = Date.now(); // Start trackRequest timer\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    Logging.warn(\"Failed to propagate context in Azure Functions\", err);\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _addPostInvocationHook() {\r\n        if (!this._postInvocationHook) {\r\n            this._postInvocationHook = this._functionsCoreModule.registerHook(\"postInvocation\", async (postInvocationContext: PostInvocationContext) => {\r\n                try {\r\n                    const modelHelper = this._getFuncModelHelper();\r\n                    if (modelHelper) {\r\n                        if (this._autoGenerateIncomingRequests) {\r\n                            if (modelHelper.isHttpTrigger(postInvocationContext)) {\r\n                                const request = <sharedFuncTypes.HttpRequest>postInvocationContext.inputs[0];\r\n                                if (request) {\r\n                                    const startTime: number = postInvocationContext.hookData.appInsightsStartTime || Date.now();\r\n                                    const extractedContext: CorrelationContext | undefined = postInvocationContext.hookData.appInsightsExtractedContext;\r\n                                    if (!extractedContext) {\r\n                                        this._createIncomingRequestTelemetry(request, postInvocationContext, startTime, null);\r\n                                    }\r\n                                    else {\r\n                                        CorrelationContextManager.runWithContext(extractedContext, () => {\r\n                                            this._createIncomingRequestTelemetry(request, postInvocationContext, startTime, extractedContext.operation.parentId);\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    Logging.warn(\"Error creating automatic incoming request in Azure Functions\", err);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _createIncomingRequestTelemetry(request: sharedFuncTypes.HttpRequest, hookContext: PostInvocationContext, startTime: number, parentId: string) {\r\n        const values = this._getFuncModelHelper().getStatusCodes(hookContext);\r\n        let statusCode: string | number = 200; //Default\r\n        if (values) {\r\n            for (const value of values) {\r\n                if (typeof value === \"number\" && Number.isInteger(value)) {\r\n                    statusCode = value;\r\n                    break;\r\n                } else if (typeof value === \"string\") {\r\n                    const parsedVal = parseInt(value);\r\n                    if (!isNaN(parsedVal)) {\r\n                        statusCode = parsedVal;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            statusCode = undefined;\r\n        }\r\n        this._client.trackRequest({\r\n            name: request.method + \" \" + request.url,\r\n            resultCode: statusCode,\r\n            success: typeof (statusCode) === \"number\" ? (0 < statusCode) && (statusCode < 400) : undefined,\r\n            url: request.url,\r\n            time: new Date(startTime),\r\n            duration: Date.now() - startTime,\r\n            id: parentId\r\n        });\r\n        this._client.flush();\r\n    }\r\n\r\n    private _removeInvocationHooks() {\r\n        if (this._preInvocationHook) {\r\n            this._preInvocationHook.dispose();\r\n            this._preInvocationHook = undefined;\r\n        }\r\n        if (this._postInvocationHook) {\r\n            this._postInvocationHook.dispose();\r\n            this._postInvocationHook = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nclass FuncModelV3Helper {\r\n    private _getInvocationContext(hookContext: PreInvocationContext | PostInvocationContext): v3.Context {\r\n        return <v3.Context>hookContext.invocationContext;\r\n    }\r\n\r\n    public getStatusCodes(hookContext: PostInvocationContext): unknown[] | undefined {\r\n        const ctx = this._getInvocationContext(hookContext);\r\n\r\n        let response: v3.HttpResponse | undefined;\r\n        const httpOutputBinding = ctx.bindingDefinitions.find(b => b.direction === \"out\" && b.type.toLowerCase() === \"http\");\r\n        if (httpOutputBinding?.name === \"$return\") {\r\n            response = hookContext.result;\r\n        } else if (httpOutputBinding && ctx.bindings && ctx.bindings[httpOutputBinding.name] !== undefined) {\r\n            response = ctx.bindings[httpOutputBinding.name];\r\n        } else {\r\n            response = ctx.res;\r\n        }\r\n\r\n        return response ? [response.statusCode, response.status] : undefined;\r\n    }\r\n\r\n    public isHttpTrigger(hookContext: PreInvocationContext | PostInvocationContext): boolean {\r\n        const ctx = this._getInvocationContext(hookContext);\r\n        return !!ctx.bindingDefinitions.find(b => b.type?.toLowerCase() === \"httptrigger\");\r\n    }\r\n}\r\n\r\n/**\r\n * V4 is only supported on Node.js v18+\r\n * Unfortunately that means we can't use the \"@azure/functions\" types for v4 or we break the build on Node <v18\r\n */\r\nclass FuncModelV4Helper {\r\n    private _getInvocationContext(hookContext: PreInvocationContext | PostInvocationContext): any {\r\n        return hookContext.invocationContext;\r\n    }\r\n\r\n    public getStatusCodes(hookContext: PostInvocationContext): unknown[] | undefined {\r\n        let response = hookContext.result;\r\n        return response ? [response.status] : undefined;\r\n    }\r\n\r\n    public isHttpTrigger(hookContext: PreInvocationContext | PostInvocationContext) {\r\n        const ctx = this._getInvocationContext(hookContext);\r\n        return ctx.options.trigger.type.toLowerCase() === \"httptrigger\";\r\n    }\r\n}"]}