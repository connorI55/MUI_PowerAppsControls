"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeatureManager = void 0;
const fs = require("fs");
const path = require("path");
const constants = require("./constants");
const buildFlags = require('./featureflags.json');
class FeatureManager {
    constructor() {
        const configPath = path.resolve('.', constants.FEATURE_CONFIG_FILE_NAME);
        let featureOverrides = {};
        try {
            if (fs.existsSync(configPath)) {
                const featureConfig = fs.readFileSync(configPath);
                featureOverrides = JSON.parse(featureConfig.toString());
            }
        }
        catch (error) {
            console.error(`[FeatureManager] [Error] Error reading feature configuration from ${configPath}:\n${error}`);
        }
        const featureFlags = {};
        Object.keys(buildFlags).forEach(function (key) {
            var _a;
            featureFlags[key] = (_a = featureOverrides[key]) !== null && _a !== void 0 ? _a : buildFlags[key];
        });
        this._featureFlags = featureFlags;
    }
    isFeatureEnabled(feature) {
        return this._featureFlags[feature] === 'on';
    }
}
exports.FeatureManager = FeatureManager;

//# sourceMappingURL=featureManager.js.map
