"use strict";
// Copyright (C) Microsoft Corporation. All rights reserved.
Object.defineProperty(exports, "__esModule", { value: true });
exports.standardTaskGroups = void 0;
const manifestTypesTask_1 = require("./tasks/manifestTypesTask");
const validateTask_1 = require("./tasks/validateTask");
const compileTask_1 = require("./tasks/compileTask");
const outputTask_1 = require("./tasks/outputTask");
const cleanTask_1 = require("./tasks/cleanTask");
const startTask_1 = require("./tasks/startTask");
const designTypesTask_1 = require("./tasks/designTypesTask");
exports.standardTaskGroups = {
    build: {
        default: [
            new validateTask_1.ValidateManifestTask,
            new validateTask_1.ValidateSourceTask,
            new manifestTypesTask_1.GenerateManifestTypesTask,
            new designTypesTask_1.GenerateDesignTypesTask,
            new validateTask_1.EslintValidateTask,
            new compileTask_1.CompileTask,
            new outputTask_1.CreateOutputTask
        ]
    },
    rebuild: {
        default: [
            new cleanTask_1.CleanTask,
            new validateTask_1.ValidateManifestTask,
            new validateTask_1.ValidateSourceTask,
            new manifestTypesTask_1.GenerateManifestTypesTask,
            new designTypesTask_1.GenerateDesignTypesTask,
            new validateTask_1.EslintValidateTask,
            new compileTask_1.CompileTask,
            new outputTask_1.CreateOutputTask
        ]
    },
    clean: {
        default: [
            new cleanTask_1.CleanTask
        ]
    },
    lint: {
        default: [
            new validateTask_1.EslintValidateTask
        ],
        fix: [
            new validateTask_1.EslintValidateTask(true)
        ]
    },
    start: {
        default: [
            new validateTask_1.ValidateManifestTask,
            new validateTask_1.ValidateSourceTask,
            new manifestTypesTask_1.GenerateManifestTypesTask,
            new designTypesTask_1.GenerateDesignTypesTask,
            new validateTask_1.EslintValidateTask,
            new compileTask_1.CompileTask,
            new outputTask_1.CreateOutputTask,
            new startTask_1.StartHarnessTask(false)
        ],
        skipBuild: [
            new startTask_1.StartHarnessTask(false)
        ],
        watch: [
            new validateTask_1.ValidateManifestTask,
            new validateTask_1.ValidateSourceTask,
            new manifestTypesTask_1.GenerateManifestTypesTask,
            new designTypesTask_1.GenerateDesignTypesTask,
            new compileTask_1.CompileTaskForWatch,
            new outputTask_1.CreateOutputTask,
            new startTask_1.StartHarnessTask(true)
        ]
    },
    refreshTypes: {
        default: [
            new manifestTypesTask_1.GenerateManifestTypesTask,
            new designTypesTask_1.GenerateDesignTypesTask
        ]
    }
};

//# sourceMappingURL=taskGroup.js.map
