// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const rule = require("../../../lib/rules/use-org-setting");
const RuleTester = require("eslint").RuleTester;

//------------------------------------------------------------------------------
// CONSTANTS
//------------------------------------------------------------------------------

const MESSAGE_ID_AUTOSAVED = "message1";
const MESSAGE_ID_LCID = "message2";
const MESSAGE_ID_UNIQUENAME = "message3";

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

const ruleTester = new RuleTester();

ruleTester.run("use-org-setting", rule, {
    valid: [
        `    // VALID
             Xrm.Utility.closeProgressIndicator();
             Xrm.Utility.getResourceString();
        `,
        `   // VALID
            alertDialog();
            openWebResourceCustom();
        `,
        `   // VALID
            var orgSettings = Xrm.Utility.getGlobalContext().organizationSettings;
            var orgId = orgSettings.organizationId;
        `,
        `   // VALID
            var orgId2 = Xrm.Utility.getGlobalContext().organizationSettings.organizationId;
        `
    ],
    invalid: [
        // StandardAPIFormat
        {
            code:
            `   // INVALID
                var isAutoSave = Xrm.Page.context.getIsAutoSaveEnabled();
                var myContext = Xrm.Page.context;
                var isAutoSave2 = myContext.getIsAutoSaveEnabled();

                var lcid = Xrm.Page.context.getOrgLcid();
                var lcid2 = myContext.getOrgLcid();
                
                var orgName = Xrm.Page.context.getOrgUniqueName();
                var x = function () {
                    var orgName2 = myContext.getOrgUniqueName();
                }
            `,
            errors: [
                { messageId: MESSAGE_ID_AUTOSAVED, line: 2 },
                { messageId: MESSAGE_ID_AUTOSAVED, line: 4 },
                { messageId: MESSAGE_ID_LCID, line: 6 },
                { messageId: MESSAGE_ID_LCID, line: 7 },
                { messageId: MESSAGE_ID_UNIQUENAME, line: 9 },
                { messageId: MESSAGE_ID_UNIQUENAME, line: 11 }
            ]
        }
    ]
});
