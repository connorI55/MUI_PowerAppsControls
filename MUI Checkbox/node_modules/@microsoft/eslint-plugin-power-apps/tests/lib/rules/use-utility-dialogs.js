// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const rule = require("../../../lib/rules/use-utility-dialogs");
const RuleTester = require("eslint").RuleTester;

//------------------------------------------------------------------------------
// Constants
//------------------------------------------------------------------------------

const MESSAGE_ID = "message1";

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

const ruleTester = new RuleTester();

ruleTester.run("use-utility-dialogs", rule, {
    valid: [
        // Alert
        `    // VALID: Alert
             alert("my message");
             window.alert("my message");
        `,
        // Confirm
        `    // VALID: Confirm
             var isConfirmed = confirm("confirm this");
             isConfirmed = window.confirm("confirm this");
        `,
        // AlertDialog
        `    // VALID: AlertDialog
             var referenceToXrmPage = Xrm.Page.data.entity.attributes;

             Xrm.Utility.alertDialog("my message");
             Xrm.Utility.alertDialog("my message", function () { });
        `,
        // ConfirmDialog
        `    // VALID: ConfirmDialog
             var referenceToXrmPage = Xrm.Page.data.entity.attributes;

             Xrm.Utility.confirmDialog("confirm this", function () { }, function () { });
        `
    ],
    invalid: [
        // Alert
        {
            code:
                `    // INVALID: Alert
                 var referenceToXrmPage = Xrm.Page.data.entity.attributes;

                 alert("my message");
                 window.alert("my message");

                 window.hasOwnProperty("prop");
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 4 },
                { messageId: MESSAGE_ID, line: 5 }
            ]
        },
        // Confirm
        {
            code:
            `    // INVALID: Confirm
                 var referenceToXrmPage = Xrm.Page.data.entity.attributes;

                 var isConfirmed = confirm("confirm this");
                 isConfirmed = window.confirm("confirm this");
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 4 },
                { messageId: MESSAGE_ID, line: 5 }
            ]
        },
        // Confirm without Xrm usage and requireXrm: false
        {
            code:
            `    // INVALID: Confirm
                 var isConfirmed = confirm("confirm this");
                 isConfirmed = window.confirm("confirm this");
            `,
            options: [{ requireXrm: false }],
            errors: [
                { messageId: MESSAGE_ID, line: 2 },
                { messageId: MESSAGE_ID, line: 3 }
            ]
        }
    ]
});
