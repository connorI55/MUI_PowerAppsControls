// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const rule = require("../../../lib/rules/avoid-dom-form");
const RuleTester = require("eslint").RuleTester;

//------------------------------------------------------------------------------
// Constants
//------------------------------------------------------------------------------

const TEST_INIT =
`    var referenceToXrmPage = Xrm.Navigation.openForm(entityFormOptions, formParameters);

    var element = document.getElementById("id"); // eslint-disable-line avoid-dom-form
    var parentDoc = window.parent.document;
    var localDoc = document;
    var localDoc2;
    localDoc2 = localDoc;
`;
const LINE_OFFSET = 7;
const MESSAGE_ID = "message1";

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

const ruleTester = new RuleTester({ parserOptions: { ecmaVersion: 2015 } });

ruleTester.run("avoid-dom-form", rule, {
    valid: [
        // AmbiguousCalls
        `    // VALID: AmbiguousCalls
	         Xrm.Page.ui.close();
             
	         var name = Xrm.Page.getAttribute("name");
	         name = Xrm.Page.data.entity.attributes.get("name");
             
	         var xhr = new XMLHttpRequest();
	         xhr.onreadystatechange = function () {
	         	if (xhr.readyState == 4) {
             
	         	}
	         };
	         xhr.open();
        `,
        // StackedUsage
        `    // VALID: StackedUsage
             document.getElementById("id").style.color = "red";
             document.activeElement.style.color = "red";
        `,
        // GlobalFunctions
        `    // VALID: GlobalFunctions
             var element = document.getElementById("id");
             var element = $("id");
        `,
        // DocumentFunctions
        `    // VALID: DocumentFunctions
             document.createElement("div");
        `,
        // DocumentProperties
        `    // VALID: DocumentProperties
             document.body;
        `,
        // ElementFunctions
        `    // VALID: ElementFunctions
             var element = document.getElementById("id");
             element.appendChild(node);
        `,
        // ElementProperties
        `    // VALID: ElementProperties
             var element = document.getElementById("id");
             element.innerHTML;
        `
    ],
    invalid: [
        // GlobalFunctions
        {
            code:
                TEST_INIT +
            `    // INVALID: GlobalFunctions
	             element = $("id");
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 2 + LINE_OFFSET }
            ]
        },
        // TrackedRefs
        {
            code:
                TEST_INIT +
            `    // INVALID: TrackedRefs
	             localDoc.getElementById("id");
	             localDoc2.getElementById("id");
	             parentDoc.getElementById("id");
                 
	             var doc = localDoc;
	             doc.getElementById("id");
                 
	             // tracked  var scenario
	             var locParent = window.parent.document;
	             locParent.body;
                 
	             localDoc2.body;
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 2 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 4 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 7 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 11 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 13 + LINE_OFFSET }
            ]
        },
        // DocumentFunctions
        {
            code:
                TEST_INIT +
            `    // INVALID: DocumentFunctions
	             // sibling and opener document scenario
	             window.parent.document.getElementById("id");
	             window.top.opener.document.getElementById("id");
                 
	             // current document scenarios
	             document.adoptNode(node);
	             document.clear();
	             document.close();
	             document.createAttribute("attribute");
	             document.createCDATASection("data");
	             document.createComment("comment");
	             document.createDocumentFragment();
	             document.createElement("div");
	             document.createTextNode("text");
	             document.getElementsByName("name");
	             document.hasFocus();
	             document.importNode(node);
	             document.open("url", "name", "features", false);    
	             document.write("content");
	             document.writeln("content");
	             window.parent.document.getElementById("id").focus();
	             
	             class MyParentClass {}
	             class MyClass extends MyParentClass {
	                constructor() {
	                    super();
	                }
	             }
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 4 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 7 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 8 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 9 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 10 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 11 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 12 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 13 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 14 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 15 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 16 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 17 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 18 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 19 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 20 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 21 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 22 + LINE_OFFSET }
            ]
        },
        // DocumentProperties
        {
            code:
                TEST_INIT +
            `    // INVALID: DocumentProperties
	             // sibling document scenario
	             window.parent.document.body;
	             window.top.opener.document.body;
                 
	             //current document scenarios
	             document.all;
	             document.activeElement;
	             document.alinkColor;
	             document.anchors;
	             document.applets;
	             document.async;
	             document.bgColor;
	             document.body;
	             document.characterSet;
	             document.compatible; // IE
	             document.compatMode;
	             document.cookie;
	             document.contentType;
	             document.defaultView;
	             document.designMode;
	             document.doctype;
	             document.documentElement;
	             document.documentMode;
	             document.documentURI;
	             document.documentURIObject; // FF
	             document.domConfig;
	             document.domain;
	             document.embeds;
	             document.fgColor;
	             document.forms;
	             document.fullscreenElement; // EDGE+
	             document.fullscreenEnabled; // EDGE+
	             document.head;
	             document.height;
	             document.images;
	             document.implementation;
	             document.inputEncoding;
	             document.lastModified;
	             document.lastStyleSheetSet;
	             document.linkColor;
	             document.links;
	             document.location;
	             document.msFullscreenElement; // IE11
	             document.msFullScreenEnabled; // IE11
	             document.mozFullScreen; // FF
	             document.mozFullScreenElement; // FF
	             document.mozFullScreenEnabled; // FF
	             document.mozSyntheticDocument; // FF
	             document.origin;
	             document.plugins;
	             document.pointerLockElement;
	             document.popupNode; // deprecated
	             document.preferredStyleSheetSet;
	             document.protocol; // IE
	             document.readyState;
	             document.referrer;
	             document.scripts;
	             document.scrollingElement;
	             document.styleSheets;
	             document.styleSheetSets;
	             document.timeline;
	             document.tooltipNode;
	             document.URL;
	             document.visibilityState;
	             document.vlinkColor;
	             document.width;
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 4 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 7 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 8 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 9 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 10 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 11 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 12 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 13 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 14 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 15 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 16 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 17 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 18 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 19 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 20 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 21 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 22 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 23 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 24 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 25 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 26 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 27 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 28 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 29 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 30 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 31 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 32 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 33 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 34 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 35 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 36 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 37 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 38 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 39 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 40 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 41 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 42 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 43 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 44 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 45 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 46 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 47 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 48 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 49 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 50 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 51 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 52 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 53 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 54 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 55 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 56 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 57 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 58 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 59 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 60 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 61 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 62 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 63 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 64 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 65 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 66 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 67 + LINE_OFFSET }
            ]
        },
        // ElementFunctions
        {
            code:
                TEST_INIT +
            `    // INVALID: ElementFunctions
	             //sibling document inherited function scenario
	             window.parent.document.getElementsByClassName("name");
                 
	             //local var document inherited scenario
                 var parentDoc = window.parent.document;
                 parentDoc.getElementsByClassName("name");
                 
                 //Element object scenarios
                 document.appendChild(node);
                 document.cloneNode(true);
                 document.compareDocumentPosition(node);
                 document.focus();
                 document.getElementsByClassName("name");
                 document.getElementsByTagName("name");
                 document.hasAttribute("name");
                 document.hasAttributes();
                 document.hasChildNodes();
                 document.hasOwnProperty("v");
                 document.insertBefore(node);
                 document.isDefaultNamespace("uri");
                 document.isEqualNode(node);
                 document.isSameNode(node);
                 document.isSupported("feature", "version");
                 document.lookupNamespaceURI("uri");
                 document.lookupPrefix("uri");
                 document.normalize();
                 document.querySelector("selector");
                 document.querySelectorAll("selectors");
                 document.removeChild(node);
                 document.removeNode(true);
	             document.replaceChild(node, node);
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 7 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 10 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 11 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 12 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 13 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 14 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 15 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 16 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 17 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 18 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 19 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 20 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 21 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 22 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 23 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 24 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 25 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 26 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 27 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 28 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 29 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 30 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 31 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 32 + LINE_OFFSET }
            ]
        },
        // ElementProperties
        {
            code:
                TEST_INIT +
            `    // INVALID: ElementProperties
	             //sibling document inherited property scenario
	             window.parent.document.title;
	             
	             //local var document inherited scenario
	             var locParentDoc = window.parent.document;
	             locParentDoc.title;
	             
	             document.attributes;
	             document.childElementCount;
	             document.childNodes
	             document.children;
	             document.dir;
	             document.firstChild;
	             document.firstElementChild;
	             document.hidden;
	             document.lastChild;
	             document.lastElementChild;
                 document.namespaceURI;
                 document.ownerDocument;
                 document.parentWindow;
                 document.textContent;
	             document.title;
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 7 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 9 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 10 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 11 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 12 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 13 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 14 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 15 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 16 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 17 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 18 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 19 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 20 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 21 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 22 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 23 + LINE_OFFSET }
            ]
        },
        // Legacy WebClient contentIFrame0 usage
        {
            code: TEST_INIT + 
            ` // INVALID: contentIFrameUsage
              var contentFrameHTMLElement = top.contentIFrame0;
              var contentFrameHTMLElemnetName = top.contentIFrame0.name;
              var contentFrameDocument = top.document.contentIFrame1;
              var contentFrameHead = document.contentIFrame1.$('head');
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 2 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 4 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 5 + LINE_OFFSET },
            ]
        },
        // Document functions prior to Xrm usage
        {
            code:
           ` // INVALID: DocumentFunctionsPreXRM
                console.log(window.parent.Xrm);
                var name = document.getElementById('name').value;
                var source = document.getElementById('source').value;
                var destination = document.getElementById('dest').value;
                console.log(name, source, destination);
            ` + TEST_INIT,
            errors: [
                { messageId: MESSAGE_ID, line: 3 },
                { messageId: MESSAGE_ID, line: 4 },
                { messageId: MESSAGE_ID, line: 5 },
            ]
        },
        // Document functions without Xrm usage and requireXrm: false
        {
            code:
           ` // INVALID: DocumentFunctionsWithoutXRMRequireXRMFalse
                var name = document.getElementById('name').value;
                var source = document.getElementById('source').value;
                var destination = document.getElementById('dest').value;
                console.log(name, source, destination);
            `,
            options: [{ requireXrm: false }],
            errors: [
                { messageId: MESSAGE_ID, line: 2 },
                { messageId: MESSAGE_ID, line: 3 },
                { messageId: MESSAGE_ID, line: 4 },
            ]
        }        
    ]
});
