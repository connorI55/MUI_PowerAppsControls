// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const rule = require("../../../lib/rules/avoid-dom-form-event");
const RuleTester = require("eslint").RuleTester;

//------------------------------------------------------------------------------
// Constants
//------------------------------------------------------------------------------

const TEST_INIT =
    `    var referenceToXrmPage = Xrm.Navigation.openForm(entityFormOptions, formParameters);

     function myHandler(obj) { alert("fired handler"); }
`;
const LINE_OFFSET = 3;
const MESSAGE_ID = "message1";

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

const ruleTester = new RuleTester();

function formatString(s) {
    const args = Array.prototype.slice.call(arguments, 1);

    return s.replace(/{(\d+)}/g, function (match, number) {
        return typeof args[number] !== "undefined" ? args[number] : match;
    });
}

ruleTester.run("avoid-dom-form-event", rule, {
    valid: [
        // Functions
        `    // VALID: Functions
             document.getElementById("id").addEventListener("click", myHandler);
             document.getElementById("id").attachEvent("click", myHandler);
             document.getElementById("id").removeEventListener("click", myHandler);
             document.getElementById("id").detachEvent("click", myHandler);
        `,
        // jQuery
        `    // VALID: jQuery
             $("id").on("click", function (obj) { }); 
             $("id").on({ click: myHandler, change: myHandler });
             $("id").off(); 
             $("id").blur(myHandler);
        `,
        // Assignment
        `    // VALID: Assignment
             document.getElementById("id").onclick = function () { }; 
             document.getElementById("id").onclick = null; 
        `
    ],
    invalid: [
        // Functions
        {
            code:
                TEST_INIT +
            `    // INVALID: Functions
                 document.getElementById("id").addEventListener("click", myHandler);
                 document.getElementById("id").addEventListener(myHandler, "click"); // invalid syntax - indeterminate
                 document.getElementById("id").attachEvent("click", myHandler);
                 document.getElementById("id").removeEventListener("click", myHandler);
                 document.getElementById("id").removeEventListener(myHandler, "click"); // invalid syntax - indeterminate
                 document.getElementById("id").detachEvent("click", myHandler);
                 var a = 1 + 1;
                 var b = this.c();
                 var value = a["key"].bind(this)();
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 2 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 4 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 5 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 6 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 7 + LINE_OFFSET }
            ]
        },
        // Functions without Xrm usage and requireXrm: false
        {
            code:
            `    // INVALID: Functions
                 document.getElementById("id").addEventListener("click", myHandler);
                 document.getElementById("id").addEventListener(myHandler, "click"); // invalid syntax - indeterminate
                 document.getElementById("id").attachEvent("click", myHandler);
                 document.getElementById("id").removeEventListener("click", myHandler);
                 document.getElementById("id").removeEventListener(myHandler, "click"); // invalid syntax - indeterminate
                 document.getElementById("id").detachEvent("click", myHandler);
                 var a = 1 + 1;
                 var b = this.c();
                 var value = a["key"].bind(this)();
            `,
            options: [{ requireXrm: false }],
            errors: [
                { messageId: MESSAGE_ID, line: 2 },
                { messageId: MESSAGE_ID, line: 3 },
                { messageId: MESSAGE_ID, line: 4 },
                { messageId: MESSAGE_ID, line: 5 },
                { messageId: MESSAGE_ID, line: 6 },
                { messageId: MESSAGE_ID, line: 7 }
            ]
        },
        // jQuery
        {
            code:
                TEST_INIT +
             `    // INVALID: jQuery
                  $("id").on("click", function (obj) { }); // adds listener 'onclick'
                  $("id").on({ click: myHandler, change: myHandler }); // adds many listeners
                  $("id").on(myPlainObj); // object ref - indeterminate
                  $("id").off(); // removes all listeners
                  $("id").off("click"); // removes listener 'onclick'
                  $("id").off({ click: myHandler, change: myHandler }); // removes many listeners
                  $("id").one("click", function (obj) { });
                  $("id").one({ click: myHandler });
                  $("id").blur(myHandler);
                  $("id").change(myHandler);
                  $("id").click(myHandler);
                  $("id").dblclick(myHandler);
                  $("id").error(myHandler);
                  $("id").focus(myHandler);
                  $("id").focusin(myHandler);
                  $("id").focusout(myHandler);
                  $("id").hover(myHandler, myHandler);
                  $("id").keyup(myHandler);
                  $("id").keydown(myHandler);
                  $("id").keypress(myHandler);
                  $("id").load(myHandler);
                  $("id").mousedown(myHandler);
                  $("id").mouseenter(myHandler);
                  $("id").mouseleave(myHandler);
                  $("id").mousemove(myHandler);
                  $("id").mouseout(myHandler);
                  $("id").mouseover(myHandler);
                  $("id").mouseup(myHandler);
                  $(document).ready(myHandler);
                  $(window).resize(myHandler);
                  $("id").scroll(myHandler);
                  $("id").select(myHandler);
                  $("id").submit(myHandler);
                  $("id").toggle(myHandler);
                  $(window).unload(myHandler);
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 2 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 4 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 5 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 6 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 7 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 8 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 9 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 10 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 11 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 12 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 13 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 14 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 15 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 16 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 17 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 18 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 19 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 20 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 21 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 22 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 23 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 24 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 25 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 26 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 27 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 28 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 29 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 30 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 31 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 32 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 33 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 34 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 35 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 36 + LINE_OFFSET }
            ]
        },
        // Assignment
        {
            code:
                TEST_INIT +
            `    // INVALID: Assignment
                 document.getElementById("id").onclick = function () { }; // assigns handler
                 document.getElementById("id").onclick = null; // removes handler
                 document.getElementById("id").oncontextmenu = function () { };
                 document.getElementById("id").ondblclick = function () { };
                 document.getElementById("id").onmousedown = function () { };
                 document.getElementById("id").onmouseleave = function () { };
                 document.getElementById("id").onmousemove = function () { };
                 document.getElementById("id").onmouseover = function () { };
                 document.getElementById("id").onmouseout = function () { };
                 document.getElementById("id").onmouseup = function () { };
                 document.getElementById("id").onkeydown = function () { };
                 document.getElementById("id").onkeypress = function () { };
                 document.getElementById("id").onkeyup = function () { };
                 document.getElementById("id").onabort = function () { };
                 document.getElementById("id").onbeforeunload = function () { };
                 document.getElementById("id").onerror = function () { };
                 document.getElementById("id").onhashchange = function () { };
                 document.getElementById("id").onpageshow = function () { };
                 document.getElementById("id").onpagehide = function () { };
                 document.getElementById("id").onresize = function () { };
                 document.getElementById("id").onscroll = function () { };
                 document.getElementById("id").onunload = function () { };
                 document.getElementById("id").onblur = function () { };
                 document.getElementById("id").onchange = function () { };
                 document.getElementById("id").onfocus = function () { };
                 document.getElementById("id").onfocusin = function () { };
                 document.getElementById("id").onfocusout = function () { };
                 document.getElementById("id").oninput = function () { };
                 document.getElementById("id").oninvalid = function () { };
                 document.getElementById("id").onreset = function () { };
                 document.getElementById("id").onsearch = function () { };
                 document.getElementById("id").onselect = function () { };
                 document.getElementById("id").onsubmit = function () { };
                 document.getElementById("id").ondrag = function () { };
                 document.getElementById("id").ondragend = function () { };
                 document.getElementById("id").ondragenter = function () { };
                 document.getElementById("id").ondragleave = function () { };
                 document.getElementById("id").ondragover = function () { };
                 document.getElementById("id").ondragstart = function () { };
                 document.getElementById("id").ondrop = function () { };
                 document.getElementById("id").oncopy = function () { };
                 document.getElementById("id").oncut = function () { };
                 document.getElementById("id").onpaste = function () { };
                 document.getElementById("id").onafterprint = function () { };
                 document.getElementById("id").onbeforeprint = function () { };
                 window.onload = function () { };
            `,
            errors: [
                { messageId: MESSAGE_ID, line: 2 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 3 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 4 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 5 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 6 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 7 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 8 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 9 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 10 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 11 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 12 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 13 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 14 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 15 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 16 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 17 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 18 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 19 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 20 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 21 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 22 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 23 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 24 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 25 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 26 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 27 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 28 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 29 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 30 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 31 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 32 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 33 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 34 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 35 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 36 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 37 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 38 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 39 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 40 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 41 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 42 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 43 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 44 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 45 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 46 + LINE_OFFSET },
                { messageId: MESSAGE_ID, line: 47 + LINE_OFFSET }
            ]
        }
    ]
});
