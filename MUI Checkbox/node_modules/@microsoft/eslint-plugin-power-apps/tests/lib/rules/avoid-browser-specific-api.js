// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const rule = require("../../../lib/rules/avoid-browser-specific-api");
const RuleTester = require("eslint").RuleTester;

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

const ruleTester = new RuleTester();
const RULE_ERROR_MESSAGES = {
    XMLHTTP: "Do not use legacy IE API \"MSXML2.XMLHTTP.3.0\"; use \"new window.XMLHttpRequest\" instead.",
    XMLDOM: "Do not use legacy IE API \"Microsoft.XmlDom\"; use \"Document Object Model (DOM)\" instead.",
    DOMDocument: "Do not use legacy IE API \"Microsoft.XmlDom\"; use \"Document Object Model (DOM)\" instead.",
    Unknown: "unknown"
};

ruleTester.run("avoid-browser-specific-api", rule, {
    valid: [
        // ActiveXObjectCtor
        `    // VALID: ActiveXObjectCtor
             var xhr = new XMLHttpRequest();
        `
    ],
    invalid: [
        // ActiveXObjectCtor
        {
            code:
            `    // INVALID: ActiveXObjectCtor
                 function func() {
                     var activeX = undefined;
                     
                     var xhr = new ActiveXObject("MSXML2.XMLHTTP.3.0");
                     
                     (new ActiveXObject("MSXML2.XMLHTTP.3.0")).open();
                     
                     var unknown = new ActiveXObject("whatever");
                     
                     return new ActiveXObject("Microsoft.XmlDom");
                }

                function createInstance(progId) {
                    return new ActiveXObject(progId);
                }
            `,
            errors: [
                { messageId: "message1", line: 5 },
                { messageId: "message1", line: 7 },
                { messageId: "message2", line: 9 },
                { messageId: "message1", line: 11 },
                { messageId: "message2", line: 15 }            
            ]
        }
    ]
});