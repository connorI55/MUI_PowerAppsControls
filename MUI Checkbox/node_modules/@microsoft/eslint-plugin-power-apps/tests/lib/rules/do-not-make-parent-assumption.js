// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const rule = require("../../../lib/rules/do-not-make-parent-assumption");
const RuleTester = require("eslint").RuleTester;
const PARENT_OR_OPENER_MESSAGE = "message1";

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

const ruleTester = new RuleTester();

ruleTester.run("do-not-make-parent-assumption", rule, {
    valid: [
        // <Name of test case>
        `    // VALID
             window.parent.Xrm.Page.ui.getCurrentControl();
             window.parent.Xrm.Page.ui.getFormType();
             var controls = window.top.Xrm.Page.ui.getFormType();
             var x = document.getElementById("myLI").parentNode.nodeName;
             var y = x.parentNode.nodeName;

             var attr = parentNode;
             var tempParentNode = attr.childNodes[k];

             this.parentNode;
             this.parentNode.insertBefore( elem, this );
             parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;

             var x = jQueryXrmDependentOptionSet.config[depOptionSet].parent;
        `
    ],
    invalid: [
        // Parent
        {
            code:
            `    // INVALID: Parent
                 var xrmParent = window.parent;
                 
                 parent.crmForm.save();
                 window.parent.IsOnline();
                 xrmParent.IsOnline();
                 function testGlobal() {
                     xrmParent.NameVar;
                 }
                 
                 var url = parent.SERVER_URL;
                 var parentForm = this.parent.crmForm;
                 var element = parent.getElementById("new_someattribute_d");
                 global.parent.__React.createElement();
                 global.parent.React = null;
            `,
            errors: [
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 2 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 4 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 5 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 6 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 8 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 11 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 12 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 13 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 14 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 15 },
            ]
        },
        // Opener
        {
            code:
            `    // INVALID: Opener
                 opener.crmForm.save();
                 window.opener.IsOnline();
                 var url = opener.SERVER_URL;
                 var parentForm = opener.crmForm;
                 var element = opener.getElementById("new_someattribute_d");
            `,
            errors: [
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 2 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 3 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 4 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 5 },
                { messageId: PARENT_OR_OPENER_MESSAGE, line: 6 }
            ]
        }
    ]
});
