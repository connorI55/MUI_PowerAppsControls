// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const ruleUtils = require("../utils/rule-utils");

//------------------------------------------------------------------------------
// Constants
//------------------------------------------------------------------------------

const DEPRECATED_LIBRARY = "/_static/_common/scripts/jquery-2.1.1.min.js";
const MESSAGE_ID = "message1";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = {
    meta: {
        type: "problem",

        docs: {
            description: "jQuery 2.1.1 to be removed in model-driven apps",
            category: "Upgrade Readiness",
            recommended: true,
            url: "https://learn.microsoft.com/en-us/power-platform/important-changes-coming#jquery-211-to-be-removed-in-model-driven-apps"
        },

        messages: {
            [MESSAGE_ID]: "This library is being removed from Model-Driven Apps Oct 2023."
        }
    },

    create(context) {

        const sourceCode = context.getSourceCode();

        //----------------------------------------------------------------------
        // Helpers
        //----------------------------------------------------------------------

        /**
         * Process a string node to determine if it needs to be reported.
         *
         * @param {ASTNode} stringNode The string node to process.
         * @returns {void}
         */
        function processString(stringNode) {

            // Value string will be "quoted" or 'aposed'.
            const urlVal = ruleUtils.stringTrimAny(stringNode.value, ["\"", "'"]);

            if (urlVal.toLocaleLowerCase().indexOf(DEPRECATED_LIBRARY) > -1) {

                ruleUtils.reportAccordingly(
                    context,
                    stringNode,
                    MESSAGE_ID,
                    [urlVal, DEPRECATED_LIBRARY],
                    urlVal);

            }
        }

        //----------------------------------------------------------------------
        // Public
        //----------------------------------------------------------------------

        return {
            Program() {
                const stringNodes = ruleUtils.getAllStrings(sourceCode);

                stringNodes.forEach(processString);
            }
        };
    }
};
