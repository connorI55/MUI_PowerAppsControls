// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const ruleUtils = require("../utils/rule-utils");

//------------------------------------------------------------------------------
// Constants
//------------------------------------------------------------------------------

const UNSUPPORTED_CRM_GLOBAL_CALLS = [
    "loadTheme",
];

const MESSAGE_ID_LOAD_THEME_GLOBAL_FUNC = "message1";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = {
    meta: {
        type: "problem",

        docs: {
            description: "Avoid using loadTheme method from Fluent v8",
            category: "Supportability",
            recommended: true,
            url: "https://docs.microsoft.com/power-apps/maker/data-platform/powerapps-checker/rules/web/avoid-loadtheme"
        },

        messages: {
            [MESSAGE_ID_LOAD_THEME_GLOBAL_FUNC]: "{{ arg0 }} references 'loadTheme'. loadTheme is a way to provide a theme in global (and only global) scope, which will affect your entire application. It's recommended to replace it with ThemeProvider. That way, your application consistently has one way of providing a theme."
        }
    },

    create(context) {

        const tracker = new ruleUtils.usageTracker();
        const sourceCode = context.getSourceCode();

        //----------------------------------------------------------------------
        // Public
        //----------------------------------------------------------------------

        return {
            "CallExpression:exit"(node) {
                if (tracker.isGlobalCall(node.callee)) {
                    node = node.callee.property ? node.callee.property : node.callee;

                    if (UNSUPPORTED_CRM_GLOBAL_CALLS.includes(node.name)) {
                        let snippet = sourceCode.getText(node);
                        ruleUtils.reportAccordingly(
                            context,
                            node,
                            MESSAGE_ID_LOAD_THEME_GLOBAL_FUNC,
                            [node.name],
                            snippet
                        )
                    }
                }
            }
        };
    }
};
