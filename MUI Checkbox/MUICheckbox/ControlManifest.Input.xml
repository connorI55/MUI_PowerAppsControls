<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="CI" constructor="MUICheckbox" version="0.0.1" display-name-key="MUICheckbox" description-key="MUICheckbox description" control-type="virtual" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    
    <!-- input properties -->
    <property name="Label" display-name-key="Label" description-key="Checkbox label" of-type="SingleLine.Text" usage="input" required="false" default-value="Label"/>
    <property name="Size" display-name-key="Size" description-key="Checkbox size" of-type="Enum" usage="input" required="true" default-value="medium">
      <value name="Small" display-name-key="Small">small</value>
      <value name="Medium" display-name-key="Medium">medium</value>
      <value name="Large" display-name-key="Large">large</value>
    </property>
    <property name="Default" display-name-key="Default" description-key="Default checkbox value" of-type="TwoOptions" usage="input" required="true" default-value="false">
      <value name="Checked" display-name-key="true">true</value>
      <value name="Unchecked" display-name-key="false">false</value>
    </property>
    <property name="LabelPosition" display-name-key="Label Position" description-key="Position of checkbox label" of-type="Enum" usage="input" required="true" default-value="end">
      <value name="End" display-name-key="End">end</value>
      <value name="Start" display-name-key="Start">start</value>
      <value name="Top" display-name-key="Top">top</value>
      <value name="Bottom" display-name-key="Bottom">bottom</value>
    </property>
    <property name="Align" display-name-key="Align" description-key="Horizontal alignment" of-type="Enum" usage="input" required="true" default-value="flex-start">
      <value name="Start" display-name-key="Start">flex-start</value>
      <value name="Center" display-name-key="Center">center</value>
      <value name="End" display-name-key="End">flex-end</value>
    </property>
    <property name="VerticalAlign" display-name-key="Vertical Align" description-key="Vertical alignment" of-type="Enum" usage="input" required="true" default-value="center">
      <value name="Top" display-name-key="Start">flex-start</value>
      <value name="Middle" display-name-key="Center">center</value>
      <value name="Bottom" display-name-key="End">flex-end</value>
    </property>
    <property name="Wrap" display-name-key="Wrap" description-key="Wrap label text" of-type="TwoOptions" usage="input" required="true" default-value="false">
      <value name="True" display-name-key="True">true</value>
      <value name="False" display-name-key="False">false</value>
    </property>

    <!-- theme properties -->
    <property name="Font" display-name-key="Font" description-key="Font" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="FontSize" display-name-key="Font Size" description-key="Font" of-type="Whole.None" usage="input" required="false"/>
    <property name="FontColor" display-name-key="Font Color" description-key="Font color" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="FontWeight" display-name-key="Font Weight" description-key="Font weight" of-type="Enum" usage="input" required="false">
      <value name="Lighter" display-name-key="Lighter">Lighter</value>
      <value name="Normal" display-name-key="Normal">Normal</value>
      <value name="Semibold" display-name-key="Semibold">Semibold</value>
       <value name="Bold" display-name-key="Bold">Bold</value>
    </property>
    <property name="PrimaryColor" display-name-key="Primary Color" description-key="Primary color" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="RippleEffect" display-name-key="Ripple Effect" description-key="Show or hide ripple effect" of-type="TwoOptions" usage="input" required="true" default-value="true">
      <value name="True" display-name-key="true">true</value>
      <value name="False" display-name-key="false">false</value>
    </property>

    <!-- output properties -->
    <property name="Value" display-name-key="Value" description-key="Is checked" of-type="TwoOptions" usage="output">
      <value name="true" display-name-key="true">true</value>
      <value name="false" display-name-key="false">false</value>
    </property>
    <property name="AutoHeight" display-name-key="Auto Height" description-key="Control auto height" of-type="Decimal" usage="output"></property>
    <property name="AutoWidth" display-name-key="Auto Width" description-key="Control auto width" of-type="Decimal" usage="output"></property>

    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.8.6" />
      <!-- <platform-library name="Fluent" version="8.29.0" /> -->
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/MUICheckbox.css" order="1" />
      <resx path="strings/MUICheckbox.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>
