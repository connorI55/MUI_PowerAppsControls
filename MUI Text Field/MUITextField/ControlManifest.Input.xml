<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="MUIControls" constructor="MUITextField" version="0.0.1" display-name-key="MUITextField" description-key="MUITextField description" control-type="virtual" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    
<!-- input properties -->
    <property name="Label" display-name-key="Label" description-key="Textbox label" of-type="SingleLine.Text" usage="input" required="false" default-value="label"/>
    <property name="Placeholder" display-name-key="Placeholder" description-key="Textbox placeholder" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="Default" display-name-key="Default" description-key="Textbox default value" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="HelperText" display-name-key="Helper Text" description-key="Textbox helper text" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="Style" display-name-key="Style" description-key="Style of text input" of-type="Enum" usage="input" required="false" default-value="outlined">
      <value name="Filled" display-name-key="Filled">filled</value>
      <value name="Outlined" display-name-key="Outlined">outlined</value>
    </property>
    <property name="Mode" display-name-key="Mode" description-key="Mode of text input" of-type="Enum" usage="input" required="true" default-value="singleline">
      <value name="SingleLine" display-name-key="Single Line">singleline</value>
      <value name="Multiline" display-name-key="Multiline">multiline</value>
    </property>
    <property name="Rows" display-name-key="Rows" description-key="Number of rows to display" of-type="Whole.None" usage="input" required="false"/>
    <property name="Size" display-name-key="Size" description-key="Checkbox size" of-type="Enum" usage="input" required="true" default-value="medium">
      <value name="Small" display-name-key="Small">small</value>
      <value name="Medium" display-name-key="Medium">medium</value>
    </property>
    <property name="Required" display-name-key="Required" description-key="Input required" of-type="TwoOptions" usage="input" required="true" default-value="false">
      <value name="True" display-name-key="True">true</value>
      <value name="False" display-name-key="False">false</value>
    </property>
    <property name="AdornmentValue" display-name-key="Adornment Value" description-key="Text input prefix / suffix value" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="AdornmentPosition" display-name-key="Adornment Position" description-key="Adornment position" of-type="Enum" usage="input" required="true" default-value="start">
      <value name="Start" display-name-key="Start">start</value>
      <value name="End" display-name-key="End">end</value>
    </property>
    <!--
    <property name="Align" display-name-key="Align" description-key="Horizontal alignment" of-type="Enum" usage="input" required="true" default-value="flex-start">
      <value name="Start" display-name-key="Start">flex-start</value>
      <value name="Center" display-name-key="Center">center</value>
      <value name="End" display-name-key="End">flex-end</value>
    </property>
     -->
    <property name="VerticalAlign" display-name-key="Vertical Align" description-key="Vertical alignment" of-type="Enum" usage="input" required="true" default-value="center">
      <value name="Top" display-name-key="Start">flex-start</value>
      <value name="Middle" display-name-key="Center">center</value>
      <value name="Bottom" display-name-key="End">flex-end</value>
    </property>
    <property name="ValidationState" display-name-key="Validation State" description-key="Show error if not valid entry" of-type="Enum" usage="input" required="true" default-value="none">
      <value name="None" display-name-key="None">none</value>
      <value name="Error" display-name-key="Error">error</value>
    </property>

    <!-- theme properties -->
    <property name="Font" display-name-key="Font" description-key="Font" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="FontSize" display-name-key="Font Size" description-key="Font" of-type="Whole.None" usage="input" required="false"/>
    <property name="FontColor" display-name-key="Font Color" description-key="Font color" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="FontWeight" display-name-key="Font Weight" description-key="Font weight" of-type="Enum" usage="input" required="false">
      <value name="Lighter" display-name-key="Lighter">Lighter</value>
      <value name="Normal" display-name-key="Normal">Normal</value>
      <value name="Semibold" display-name-key="Semibold">Semibold</value>
      <value name="Bold" display-name-key="Bold">Bold</value>
    </property>
    <property name="PrimaryColor" display-name-key="Primary Color" description-key="Primary color" of-type="SingleLine.Text" usage="input" required="false"/>

    <!-- output properties -->
    <property name="Value" display-name-key="Value" description-key="Text input value" of-type="SingleLine.Text" usage="output"/>
    <!-- 
    <property name="AutoHeight" display-name-key="Auto Height" description-key="Control auto height" of-type="Decimal" usage="output"></property>
    <property name="AutoWidth" display-name-key="Auto Width" description-key="Control auto width" of-type="Decimal" usage="output"></property>
    -->

    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.8.6" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/MUITextField.css" order="1" />
      <resx path="strings/MUITextField.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>
